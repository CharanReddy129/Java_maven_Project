name: Image Push to ECR

on:
  workflow_dispatch:

jobs:
    build_artifact:
        runs-on: ubuntu-latest
        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: setup JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'
        
        - name: building artifact
          run: mvn clean package
        #   working-directory: ${{ github.workspace }}

        - name: upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: web-app
            path: ./target/*.war

    image_build_push:
        needs: build_artifact
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: java_maven
            DOCKER_USERNAME: 851725275708.dkr.ecr.ap-south-1.amazonaws.com
            IMAGE_TAG: ${{ github.run_number }}
        steps:
            - name: checkout code
              uses: actions/checkout@v4

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: web-app
                path: target/
            
            - name: aws configure
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-south-1

            - name: ECR Login
              uses: docker/login-action@v3
              with:
                registry: 851725275708.dkr.ecr.ap-south-1.amazonaws.com
                username: ${{ secrets.AWS_ACCESS_KEY }}
                password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            # - name: Set up QEMU
            #   uses: docker/setup-qemu-action@v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                platform: linux/amd64
                tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}