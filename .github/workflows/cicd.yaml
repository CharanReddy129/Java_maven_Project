name: implementing cicd pipeline

on: push
    # workflow_dispatch:

jobs:
    compile:
        runs-on: self-hosted
        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: setup JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'
        - name: compile code
          run: mvn compile

    security_checks:
        runs-on: self-hosted
        needs: compile
        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: setup trivy
          run: |
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy -y
 
        - name: trivy scan
          run: trivy fs --format table -o output.json .

        - name: gitleaks setup
          run: sudo apt-get install -y gitleaks

        - name: gitleaks scan
          run: gitleaks detect source . -r gitleaks-output.json -f json


    sonar_scan:
        needs: security_checks
        runs-on: self-hosted
        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: setup JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'

        - name: sonar scan
          uses: SonarSource/sonarqube-scan-action@v5.1.0
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

        - name: SonarQube Quality Gate check
          id: sonarqube-quality-gate-check
          uses: sonarsource/sonarqube-quality-gate-action@master
          with:
            pollingTimeoutSec: 600
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

        - name: building artifact
          run: mvn clean package

    build_artifact:
        needs: sonar_scan
        runs-on: self-hosted
        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: setup JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'
        
        - name: building artifact
          run: mvn clean package

        - name: uploading artifact
          uses: actions/upload-artifact@v4
          with:
            name: war-artifact
            path: ./target/*.war

    build_push_docker_image:
        needs: build_artifact
        runs-on: self-hosted
        steps:
        - name: download artifact
          uses: actions/download-artifact@v4
          with:
            name: war-artifact
            path: target 

        - name: docker login
          uses: docker/login-action@v3
          with: 
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
      
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ${{ vars.DOCKER_USERNAME }}/${{ secrets.DOCKER_PASSWORD }}:${{ github.run_number }}
    